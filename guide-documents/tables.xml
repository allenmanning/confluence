<h2 id="overview">Overview</h2>

<p>Quarto includes a number of features aimed at making it easy to to author and customize markdown table output, including:</p>

<ul>
<li>Specifying column alignment and widths.</li>
<li>Providing captions, subcaptions, and cross-references.</li>
<li>Generating tables dynamically from executable code cells.</li>
</ul>

<p>This article covers using these features in-depth.</p>

<h2 id="markdown-tables">Markdown Tables</h2>

<p>The most commonly used markdown table is known as a pipe table. Pipe tables support specifying per column alignment as well as captions. For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[| Default | Left | Right | Center |
|---------|:-----|------:|:------:|
| 12      | 12   |    12 |   12   |
| 123     | 123  |   123 |  123   |
| 1       | 1    |     1 |   1    |

: Demonstration of pipe table syntax]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<p>Here is the table rendered to HTML:</p>

<table>
<tr class="header">
<th align="left"><p style="text-align: left;">Default</p></th>
<th align="left"><p style="text-align: left;">Left</p></th>
<th align="right"><p style="text-align: right;">Right</p></th>
<th align="center"><p style="text-align: center;">Center</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">12</p></td>
<td align="left"><p style="text-align: left;">12</p></td>
<td align="right"><p style="text-align: right;">12</p></td>
<td align="center"><p style="text-align: center;">12</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">123</p></td>
<td align="left"><p style="text-align: left;">123</p></td>
<td align="right"><p style="text-align: right;">123</p></td>
<td align="center"><p style="text-align: center;">123</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">1</p></td>
<td align="left"><p style="text-align: left;">1</p></td>
<td align="right"><p style="text-align: right;">1</p></td>
<td align="center"><p style="text-align: center;">1</p></td>
</tr>
</table>
<p>Demonstration of pipe table syntax</p>

<p>The beginning and ending pipe characters are optional, but pipes are required between all columns. The colons indicate column alignment as shown. The header cannot be omitted, however you can simulate a headerless table by including a header with blank cells.</p>

<p>Since the pipes indicate column boundaries, columns need not be vertically aligned, as they are in the above example. So, this is a perfectly legal (though ugly) pipe table:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[fruit| price
-----|-----:
apple|2.05
pear|1.37
orange|3.09]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<table>
<tr class="header">
<th align="left"><p style="text-align: left;">fruit</p></th>
<th align="right"><p style="text-align: right;">price</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">apple</p></td>
<td align="right"><p style="text-align: right;">2.05</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">pear</p></td>
<td align="right"><p style="text-align: right;">1.37</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">orange</p></td>
<td align="right"><p style="text-align: right;">3.09</p></td>
</tr>
</table>

<p>The cells of pipe tables cannot contain block elements like paragraphs and lists, and cannot span multiple lines. If a pipe table contains a row whose markdown content is wider than the column width (see <code>columns</code> option), then the table will take up the full text width and the cell contents will wrap, with the relative cell widths determined by the number of dashes in the line separating the table header from the table body.</p>

<p>For example <code>---|-</code> would make the first column 3/4 and the second column 1/4 of the full text width. On the other hand, if no lines are wider than column width, then cell contents will not be wrapped, and the cells will be sized to their contents.</p>

<h3 id="authoring">Authoring</h3>

<p>For simple tables with only a few cells it’s straightforward to create them directly in markdown. As tables get larger, it makes sense to use an authoring tool. Some table authoring tools to consider include:</p>

<table>
<colgroup>
<col width="35%" />
<col width="65%" />
</colgroup>
<tr class="odd">
<td align="left"><p style="text-align: left;"><a href='https://tablesgenerator.com/markdown_tables' title=''>TablesGenerator</a></p></td>
<td align="left"><p style="text-align: left;">Online tool for generating markdown tables</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;"><a href='https://www.emacswiki.org/emacs/TableMode' title=''>Emacs TableMode</a></p></td>
<td align="left"><p style="text-align: left;">Text based table creation and editing capabilities for Emacs.</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;"><a href='/docs/visual-editor/content.qmd#editing-tables' title=''>Quarto Visual Editor</a></p></td>
<td align="left"><p style="text-align: left;">Visual editor for <code>.qmd</code> files with table editing support.</p></td>
</tr>
</table>

<h2 id="column-widths">Column Widths</h2>

<p><span style="color:orange">Not Yet Supported - Confluence ignores %-based styling</span></p>

<p>Above we describe a means of specifying column widths using the relative number of dashes in each column header (e.g. <code>---|-</code> to get a 75% / 25% split for a two-column table).</p>

<p>You can also explicitly specify columns widths using the <code>tbl-colwidths</code> attribute or document-level option. For an individual markdown table, add the attribute after the caption. For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[| fruit  | price  |
|--------|--------|
| apple  | 2.05   |
| pear   | 1.37   |
| orange | 3.09   |

: Fruit prices {tbl-colwidths="[75,25]"}]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<table>
<colgroup>
<col width="75%" />
<col width="25%" />
</colgroup>
<tr class="header">
<th align="left"><p style="text-align: left;">fruit</p></th>
<th align="left"><p style="text-align: left;">price</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">apple</p></td>
<td align="left"><p style="text-align: left;">2.05</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">pear</p></td>
<td align="left"><p style="text-align: left;">1.37</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">orange</p></td>
<td align="left"><p style="text-align: left;">3.09</p></td>
</tr>
</table>
<p>Fruit prices</p>

<p>If your table doesn’t have a caption, then you can still specify only <code>tbl-colwidths</code>:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[: {tbl-colwidths="[75,25]"}]]>
        </ac:plain-text-body>
    </ac:structured-macro>
