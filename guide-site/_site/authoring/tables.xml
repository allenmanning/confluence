<h2 id="overview">Overview</h2>

<p>Quarto includes a number of features aimed at making it easy to to author and customize markdown table output, including:</p>

<ul>
<li>Specifying column alignment and widths.</li>
<li>Providing captions, subcaptions, and cross-references.</li>
<li>Generating tables dynamically from executable code cells.</li>
</ul>

<p>This article covers using these features in-depth.</p>

<h2 id="markdown-tables">Markdown Tables</h2>

<p>The most commonly used markdown table is known as a pipe table. Pipe tables support specifying per column alignment as well as captions. For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[| Default | Left | Right | Center |
|---------|:-----|------:|:------:|
| 12      | 12   |    12 |   12   |
| 123     | 123  |   123 |  123   |
| 1       | 1    |     1 |   1    |

: Demonstration of pipe table syntax]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<p>Here is the table rendered to HTML:</p>

<table>
<tr class="header">
<th align="left"><p style="text-align: left;">Default</p></th>
<th align="left"><p style="text-align: left;">Left</p></th>
<th align="right"><p style="text-align: right;">Right</p></th>
<th align="center"><p style="text-align: center;">Center</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">12</p></td>
<td align="left"><p style="text-align: left;">12</p></td>
<td align="right"><p style="text-align: right;">12</p></td>
<td align="center"><p style="text-align: center;">12</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">123</p></td>
<td align="left"><p style="text-align: left;">123</p></td>
<td align="right"><p style="text-align: right;">123</p></td>
<td align="center"><p style="text-align: center;">123</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">1</p></td>
<td align="left"><p style="text-align: left;">1</p></td>
<td align="right"><p style="text-align: right;">1</p></td>
<td align="center"><p style="text-align: center;">1</p></td>
</tr>
</table>
<p>Demonstration of pipe table syntax</p>

<p>The beginning and ending pipe characters are optional, but pipes are required between all columns. The colons indicate column alignment as shown. The header cannot be omitted, however you can simulate a headerless table by including a header with blank cells.</p>

<p>Since the pipes indicate column boundaries, columns need not be vertically aligned, as they are in the above example. So, this is a perfectly legal (though ugly) pipe table:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[fruit| price
-----|-----:
apple|2.05
pear|1.37
orange|3.09]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<table>
<tr class="header">
<th align="left"><p style="text-align: left;">fruit</p></th>
<th align="right"><p style="text-align: right;">price</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">apple</p></td>
<td align="right"><p style="text-align: right;">2.05</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">pear</p></td>
<td align="right"><p style="text-align: right;">1.37</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">orange</p></td>
<td align="right"><p style="text-align: right;">3.09</p></td>
</tr>
</table>

<p>The cells of pipe tables cannot contain block elements like paragraphs and lists, and cannot span multiple lines. If a pipe table contains a row whose markdown content is wider than the column width (see <code>columns</code> option), then the table will take up the full text width and the cell contents will wrap, with the relative cell widths determined by the number of dashes in the line separating the table header from the table body.</p>

<p>For example <code>---|-</code> would make the first column 3/4 and the second column 1/4 of the full text width. On the other hand, if no lines are wider than column width, then cell contents will not be wrapped, and the cells will be sized to their contents.</p>

<h3 id="authoring">Authoring</h3>

<p>For simple tables with only a few cells it’s straightforward to create them directly in markdown. As tables get larger, it makes sense to use an authoring tool. Some table authoring tools to consider include:</p>

<table>
<colgroup>
<col width="35%" />
<col width="65%" />
</colgroup>
<tr class="odd">
<td align="left"><p style="text-align: left;"><a href='https://tablesgenerator.com/markdown_tables' title=''>TablesGenerator</a></p></td>
<td align="left"><p style="text-align: left;">Online tool for generating markdown tables</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;"><a href='https://www.emacswiki.org/emacs/TableMode' title=''>Emacs TableMode</a></p></td>
<td align="left"><p style="text-align: left;">Text based table creation and editing capabilities for Emacs.</p></td>
</tr>
</table>

<h2 id="column-widths">Column Widths</h2>

<p><span style="color:orange">Not Yet Supported - Confluence parses-out %-based styling when saving to CFT</span>
<a href='https://github.com/allenmanning/confluence/issues/24' title=''>24</a></p>

<p>Above we describe a means of specifying column widths using the relative number of dashes in each column header (e.g. <code>---|-</code> to get a 75% / 25% split for a two-column table).</p>

<p>You can also explicitly specify columns widths using the <code>tbl-colwidths</code> attribute or document-level option. For an individual markdown table, add the attribute after the caption. For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[| fruit  | price  |
|--------|--------|
| apple  | 2.05   |
| pear   | 1.37   |
| orange | 3.09   |

: Fruit prices {tbl-colwidths="[75,25]"}]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<table>
<colgroup>
<col width="75%" />
<col width="25%" />
</colgroup>
<tr class="header">
<th align="left"><p style="text-align: left;">fruit</p></th>
<th align="left"><p style="text-align: left;">price</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">apple</p></td>
<td align="left"><p style="text-align: left;">2.05</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">pear</p></td>
<td align="left"><p style="text-align: left;">1.37</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">orange</p></td>
<td align="left"><p style="text-align: left;">3.09</p></td>
</tr>
</table>
<p>Fruit prices</p>

<p>If your table doesn’t have a caption, then you can still specify only <code>tbl-colwidths</code>:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[: {tbl-colwidths="[75,25]"}]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<h2 id="cross-references">Cross References</h2>

<p><span style="color:orange">Not Yet Supported - Table Cross References</span>
<a href='https://github.com/allenmanning/confluence/issues/25' title=''>25</a></p>

<p>For tables produced by executable code cells, include a label with a <code>tbl-</code> prefix to make them cross-referenceable. For example:</p>

<div class="cell" execution_count="1">
<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown cell-code</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[```{python}
#| label: tbl-planets
#| tbl-cap: Planets

from IPython.display import Markdown
from tabulate import tabulate
table = [["Sun",696000,1989100000],
         ["Earth",6371,5973.6],
         ["Moon",1737,73.5],
         ["Mars",3390,641.85]]
Markdown(tabulate(
  table, 
  headers=["Planet","R (km)", "mass (x 10^29 kg)"]
))
```
]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<div class="cell-output cell-output-display" execution_count="1">
<div id="tbl-planets">
<table>
<tr class="header">
<th align="left"><p style="text-align: left;">Planet</p></th>
<th align="right"><p style="text-align: right;">R (km)</p></th>
<th align="right"><p style="text-align: right;">mass (x 10^29 kg)</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">Sun</p></td>
<td align="right"><p style="text-align: right;">696000</p></td>
<td align="right"><p style="text-align: right;">1.9891e+09</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">Earth</p></td>
<td align="right"><p style="text-align: right;">6371</p></td>
<td align="right"><p style="text-align: right;">5973.6</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">Moon</p></td>
<td align="right"><p style="text-align: right;">1737</p></td>
<td align="right"><p style="text-align: right;">73.5</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">Mars</p></td>
<td align="right"><p style="text-align: right;">3390</p></td>
<td align="right"><p style="text-align: right;">641.85</p></td>
</tr>
</table>
<p>Table 1: Planets</p></div></div></div>

<div>
<blockquote><p><strong>Label Prefix</strong></p>

<p>In order for a table to be cross-referenceable, its label must start with the <code>tbl-</code> prefix.</p></blockquote></div>

<p>For markdown tables, add a caption below the table, then include a <code>#tbl-</code> label in braces at the end of the caption. For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[| Col1 | Col2 | Col3 |
|------|------|------|
| A    | B    | C    |
| E    | F    | G    |
| A    | G    | G    |

: My Caption {#tbl-letters}

See @tbl-letters.]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<p>Which looks like this when rendered to HTML:</p>

<div id="tbl-letters">
<table>
<tr class="header">
<th align="left"><p style="text-align: left;">Col1</p></th>
<th align="left"><p style="text-align: left;">Col2</p></th>
<th align="left"><p style="text-align: left;">Col3</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">A</p></td>
<td align="left"><p style="text-align: left;">B</p></td>
<td align="left"><p style="text-align: left;">C</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">E</p></td>
<td align="left"><p style="text-align: left;">F</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">A</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
</tr>
</table>
<p>Table 2: My Caption</p></div>

<p>See <ac:link><ri:attachment ri:filename="Table 2"/><ac:plain-text-link-body><![CDATA[#tbl-letters]]></ac:plain-text-link-body></ac:link>.</p>

<h3 id="subtables">Subtables</h3>

<p>You may want to create a composition of several sub-tables. To do this, create a div with a main identifier, then apply sub-identifiers (and optional caption text) to the contained tables. For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[::: {#tbl-panel layout-ncol=2}
| Col1 | Col2 | Col3 |
|------|------|------|
| A    | B    | C    |
| E    | F    | G    |
| A    | G    | G    |

: First Table {#tbl-first}

| Col1 | Col2 | Col3 |
|------|------|------|
| A    | B    | C    |
| E    | F    | G    |
| A    | G    | G    |

: Second Table {#tbl-second}

Main Caption
:::

See @tbl-panel for details, especially @tbl-second.]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<p>Which looks like this when rendered to HTML:</p>

<div>
<table>
<colgroup>
<col width="50%" />
<col width="50%" />
</colgroup>
<tr class="odd">
<td align="center"><p style="text-align: center;"><div id="tbl-first" ref-parent="tbl-panel" width="50.0%" layout-align="center">
<table>
<colgroup>
<col width="33%" />
<col width="33%" />
<col width="33%" />
</colgroup>
<tr class="header">
<th align="left"><p style="text-align: left;">Col1</p></th>
<th align="left"><p style="text-align: left;">Col2</p></th>
<th align="left"><p style="text-align: left;">Col3</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">A</p></td>
<td align="left"><p style="text-align: left;">B</p></td>
<td align="left"><p style="text-align: left;">C</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">E</p></td>
<td align="left"><p style="text-align: left;">F</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">A</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
</tr>
</table>
<p>(a) First Table</p></div></p></td>
<td align="center"><p style="text-align: center;"><div id="tbl-second" ref-parent="tbl-panel" width="50.0%" layout-align="center">
<table>
<colgroup>
<col width="33%" />
<col width="33%" />
<col width="33%" />
</colgroup>
<tr class="header">
<th align="left"><p style="text-align: left;">Col1</p></th>
<th align="left"><p style="text-align: left;">Col2</p></th>
<th align="left"><p style="text-align: left;">Col3</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">A</p></td>
<td align="left"><p style="text-align: left;">B</p></td>
<td align="left"><p style="text-align: left;">C</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">E</p></td>
<td align="left"><p style="text-align: left;">F</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">A</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
<td align="left"><p style="text-align: left;">G</p></td>
</tr>
</table>
<p>(b) Second Table</p></div></p></td>
</tr>
</table>

<p>Table 3: Main Caption</p></div>

<p>See <ac:link><ri:attachment ri:filename="Table 3"/><ac:plain-text-link-body><![CDATA[#tbl-panel]]></ac:plain-text-link-body></ac:link> for details, especially <ac:link><ri:attachment ri:filename="Table 3 (b)"/><ac:plain-text-link-body><![CDATA[#tbl-second]]></ac:plain-text-link-body></ac:link>.</p>

<p>Note that the &ldquo;Main Caption&rdquo; for the table is provided as the last block within the containing div.</p>

<h2 id="caption-location">Caption Location</h2>

<p><span style="color:orange">Not Yet Supported - Caption Location</span>
<a href='https://github.com/allenmanning/confluence/issues/26' title=''>26</a></p>

<p>By default, table captions are positioned above tables. You can modify this behavior using the <code>tbl-cap-location</code> option. For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">yaml</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[---
tbl-cap-location: top
---]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<p>Note that this option is specified at the top level so that it can be shared by both PDF and HTML formats. If you are only targeting a single format you can place it alongside other <code>format</code> specific options.</p>

<p>Valid values for the caption location include:</p>

<table>
<tr class="header">
<th align="left"><p style="text-align: left;">Value</p></th>
<th align="left"><p style="text-align: left;">Description</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;"><code>top</code></p></td>
<td align="left"><p style="text-align: left;">Position the caption above the table.</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;"><code>bottom</code></p></td>
<td align="left"><p style="text-align: left;">Position the caption below the table.</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;"><code>margin</code></p></td>
<td align="left"><p style="text-align: left;">Position the caption in the margin.</p></td>
</tr>
</table>

<h2 id="computations">Computations</h2>

<p>All of the options described above work for tables produced by executable code cells. For example, here we use the Python <a href='https://pypi.org/project/tabulate/' title=''>tabulate</a> package along with the <code>Markdown()</code> function from the IPython <a href='https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html#' title=''>display</a> module to print a markdown table:</p>

<div class="cell" execution_count="2">
<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown cell-code</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[```{python}
#| label: tbl-planet-measures
#| tbl-cap: Planets

from IPython.display import Markdown
from tabulate import tabulate
table = [["Sun",696000,1989100000],
         ["Earth",6371,5973.6],
         ["Moon",1737,73.5],
         ["Mars",3390,641.85]]
Markdown(tabulate(
  table, 
  headers=["Planet","R (km)", "mass (x 10^29 kg)"]
))
```
]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<div class="cell-output cell-output-display" execution_count="2">
<div id="tbl-planet-measures">
<table>
<tr class="header">
<th align="left"><p style="text-align: left;">Planet</p></th>
<th align="right"><p style="text-align: right;">R (km)</p></th>
<th align="right"><p style="text-align: right;">mass (x 10^29 kg)</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">Sun</p></td>
<td align="right"><p style="text-align: right;">696000</p></td>
<td align="right"><p style="text-align: right;">1.9891e+09</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">Earth</p></td>
<td align="right"><p style="text-align: right;">6371</p></td>
<td align="right"><p style="text-align: right;">5973.6</p></td>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">Moon</p></td>
<td align="right"><p style="text-align: right;">1737</p></td>
<td align="right"><p style="text-align: right;">73.5</p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">Mars</p></td>
<td align="right"><p style="text-align: right;">3390</p></td>
<td align="right"><p style="text-align: right;">641.85</p></td>
</tr>
</table>
<p>Table 4: Planets</p></div></div></div>

<p>Here we apply the <code>tbl-cap</code> and <code>tbl-colwidths</code> options to a code cell that uses the knitr <code>kable()</code> function to write a markdown table:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[```{r}
#| label: tbl-cars
#| tbl-cap: "Cars"
#| tbl-colwidths: [60,40]

library(knitr)
kable(head(cars))
```]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<p>If your code cell produces multiple tables, you can also specify subcaptions and layout using cell options:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[```{r}
#| label: tbl-example
#| tbl-cap: "Example"
#| tbl-subcap: 
#|   - "Cars"
#|   - "Pressure"
#| layout-ncol: 2
#| echo: fenced

library(knitr)
kable(head(cars))
kable(head(pressure))
```]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<h2 id="grid-tables">Grid Tables</h2>

<p>Grid tables are a more advanced type of markdown tables that allow arbitrary block elements (multiple paragraphs, code blocks, lists, etc.). For example:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[+---------------+---------------+--------------------+
| Fruit         | Price         | Advantages         |
+===============+===============+====================+
| Bananas       | $1.34         | - built-in wrapper |
|               |               | - bright color     |
+---------------+---------------+--------------------+
| Oranges       | $2.10         | - cures scurvy     |
|               |               | - tasty            |
+---------------+---------------+--------------------+

: Sample grid table.]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<p>The row of <code>=</code>s separates the header from the table body, and can be omitted for a headerless table. Cells that span multiple columns or rows are not supported.</p>

<p>This is what the table looks like when rendered to markdown:</p>

<table>
<colgroup>
<col width="22%" />
<col width="22%" />
<col width="32%" />
</colgroup>
<tr class="header">
<th align="left"><p style="text-align: left;">Fruit</p></th>
<th align="left"><p style="text-align: left;">Price</p></th>
<th align="left"><p style="text-align: left;">Advantages</p></th>
</tr>
<tr class="odd">
<td align="left"><p style="text-align: left;">Bananas</p></td>
<td align="left"><p style="text-align: left;">$1.34</p></td>
<td align="left"><p style="text-align: left;"><ul>
<li>built-in wrapper</li>
<li>bright color</li>
</ul></p></td>
</tr>
<tr class="even">
<td align="left"><p style="text-align: left;">Oranges</p></td>
<td align="left"><p style="text-align: left;">$2.10</p></td>
<td align="left"><p style="text-align: left;"><ul>
<li>cures scurvy</li>
<li>tasty</li>
</ul></p></td>
</tr>
</table>
<p>Sample grid table.</p>

<p>Alignments can be specified as with pipe tables, by putting colons at the boundaries of the separator line after the header:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[+---------------+---------------+--------------------+
| Right         | Left          | Centered           |
+==============:+:==============+:==================:+
| Bananas       | $1.34         | built-in wrapper   |
+---------------+---------------+--------------------+]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<table>
<colgroup>
<col width="22%" />
<col width="22%" />
<col width="29%" />
</colgroup>
<tr class="header">
<th align="right"><p style="text-align: right;">Right</p></th>
<th align="left"><p style="text-align: left;">Left</p></th>
<th align="center"><p style="text-align: center;">Centered</p></th>
</tr>
<tr class="odd">
<td align="right"><p style="text-align: right;">Bananas</p></td>
<td align="left"><p style="text-align: left;">$1.34</p></td>
<td align="center"><p style="text-align: center;">built-in wrapper</p></td>
</tr>
</table>

<p>For headerless tables, the colons go on the top line instead:</p>

<ac:structured-macro
      ac:name="code"
      ac:schema-version="1"
      ac:macro-id="1d1a2d13-0179-4d8f-b448-b28dfaceea4a">
        <ac:parameter ac:name="language">markdown</ac:parameter>
        <ac:plain-text-body>
          <![CDATA[+--------------:+:--------------+:------------------:+
| Right         | Left          | Centered           |
+---------------+---------------+--------------------+]]>
        </ac:plain-text-body>
    </ac:structured-macro>

<table>
<colgroup>
<col width="22%" />
<col width="22%" />
<col width="29%" />
</colgroup>
<tr class="odd">
<td align="right"><p style="text-align: right;">Right</p></td>
<td align="left"><p style="text-align: left;">Left</p></td>
<td align="center"><p style="text-align: center;">Centered</p></td>
</tr>
</table>

<p>Note that grid tables are quite awkward to write with a plain text editor (because unlike pipe tables, the column indicators must align). Here are some tools that can assist with creating grid tables:</p>

<ul>
<li><p>Emacs’ <a href='https://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Based-Tables.html' title=''>table-mode</a> (<code>M-x table-insert</code>)</p></li>
<li><p>Quarto <a href='https://quarto.org/docs/visual-editor/content.html#editing-tables' title=''>Visual Editor</a></p></li>
</ul>
